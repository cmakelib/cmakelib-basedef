@PACKAGE_INIT@

##
# Include targets configurations
#
# It goes over all targets in include_targets_names list and includes their configuration files.
# The configuration files are expected to be in the same directory as this file and have the same name as the target.
# This is achieved by using the whole CMDEF chain for target creation, install and package generation.
#
# <function>(
#   <include_targets_names>
# )
#
FUNCTION(__INCLUDE_TARGETS_CONFIGS include_targets_names)
    SET(namespace "@__MAIN_TARGET@::")
    FOREACH(target IN LISTS include_targets_names)
        SET(target_path "${CMAKE_CURRENT_LIST_DIR}/${target}.cmake")
        INCLUDE("${target_path}")

        __SET_INTERFACE_TARGET_SOURCES("${namespace}${target}")
    ENDFOREACH()
ENDFUNCTION()

##
# Set interface target sources
#
# It gets the list of sources from the target and sets them as INTERFACE sources for the target.
# The sources can be set for INTERFACE libraries only and they are set in CMDEF_INSTALL.
#
# <function>(
#   <target>
# )
#
FUNCTION(__SET_INTERFACE_TARGET_SOURCES target)
    GET_TARGET_PROPERTY(interface_sources "${target}" CMDEF_INSTALL_INTERFACE_SOURCES)
    IF(interface_sources)
        FOREACH(source_file IN LISTS interface_sources)
            SET(source_file_path "${PACKAGE_PREFIX_DIR}/${source_file}")
            TARGET_SOURCES("${target}" INTERFACE $<BUILD_INTERFACE:${source_file_path}>)
        ENDFOREACH()
    ENDIF()
ENDFUNCTION()

__INCLUDE_TARGETS_CONFIGS("@CMDEF_PACKAGE_TARGETS_TO_INCLUDE@")

SET_AND_CHECK(config_version_file "${CMAKE_CURRENT_LIST_DIR}/${CMAKE_FIND_PACKAGE_NAME}ConfigVersion.cmake")
INCLUDE("${config_version_file}")
